{
  "id": "tooltip_id",
  "should_merge_with_vanilla": true,
  "_comment_position": "Can be omitted if should_merge_with_vanilla is true",
  "position": "TOP|BOTTOM|LEFT|RIGHT|NULL",
  "_comment_colors": "Colors are hexadecimal string values (need to be parsed and to output a specific error in case of wrong input) [use default tooltip colors if omitted]",
  "background_color": "FFFF0000",
  "border_start_color": "FF00FF00",
  "border_end_color": "FF0000FF",
  "components": [
    {
      "_comment": "The Identifier could be moved to be a key for a component object inside of the components object, it's just another way to structure things",
      "identifier": "example_identifier",
      "condition_logic": "AND|OR|XOR|XNOR",
      "_comment_lore_and_name": "I am skipping lore since it's basically just like NBT in our perspective and name is probably just the registry name? which is included in item_name",
      "conditions": [
        {
          "_comment": "If you're wondering what convention these key ids should adhere to, imo they should be the same as in the Keyboard LWJGL class and then we can write a wiki so that people can understand what each id means",
          "_comment_todo": "If we want to support key combination then the key property might need to be an array in the future",
          "type": "key_held",
          "key": 2
        },
        {
          "type": "key_toggle",
          "key": 1
        },
        {
          "type": "always"
        },
        {
          "type": "never"
        },
        {
          "type": "dimension",
          "dimension_ids": []
        },
        {
          "_comment": "start can be higher than end in certain situation (refer to the doc) | one whole day should be 24000",
          "type": "time_span",
          "start": 2000,
          "end": 8000
        },
        {
          "type": "game_stage",
          "stage_name": "example_stage"
        },
        {
          "_comment": "is this the translation key or the registry names (it'd be better to ask)",
          "type": "item_name",
          "localized": false
        },
        {
          "type": "enchantment",
          "name": "minecraft:sharpness",
          "levelMin": 1,
          "levelMax": 2
        },
        {
          "type": "potion_effect",
          "name": "minecraft:poison",
          "duration_and_amplifier": "TBD"
        },
        {
          "type": "nbt",
          "check_type": "equals|contains|!contains|",
          "tag": {
            "bool_tag": true,
            "string_key": "string_elem",
            "compound": {
              "sub_key": "value"
            }
          }
        },
        {
          "type": "durability",
          "checks": [
            {
              "check_type": "equals|lessThan|moreThan",
              "value": 90
            }
          ]
        },
        {
          "type": "quantity",
          "checks": [
            {
              "check_type": "equals|lessThan|moreThan",
              "value": 32
            }
          ]
        },
        {
          "type": "modid",
          "id": "minecraft"
        }
      ],

      "_icon_comment": "We're going to need some way to organize and load external texture resources (maybe like Resource Loader mod does?)",
      "icon": "resources/thismod/example_icon.png",

      "_value_comment": "There will obv be only one values per component (I'm adding multiple here just to have an example of each one written down)",
      "value1": {
        "type": "none"
      },
      "value2": {
        "type": "string",
        "value": "",
        "formatting": {
          "color": "9F3521",
          "classic_color": "ยง2",
          "bold": true,
          "underlined": false,
          "obfuscated": false,
          "italic": false,
          "has_shadow": true
        }
      },
      "value3": {
        "type": "item",
        "localized": true,
        "_comment": "this feature below would be really cool to add",
        "formatting": "resources/thismod/external_formatting.json"
      },
      "value4": {
        "type": "ore",
        "ore": "ore:ingotCopper",
        "show_ore_namespace": false
      },
      "value5": {
        "type": "mod_name",
        "show_raw_modid": false
      },
      "value6": {
        "type": "enchantment",
        "level": {
          "enabled": true,
          "prefixed": false,
          "show_highest_possible": false
        }
      },
      "value7": {
        "_comment": "I think it's supposed to be a constant potion thing?",
        "type": "potion",
        "id": "minecraft:swiftness",
        "level": {
          "enabled": true,
          "prefixed": false
        },
        "duration": {
          "enabled": false
        },
        "potion_type": {
          "enabled": true,
          "prefixed": true
        }
      },
      "value8": {
        "type": "nbt",
        "key": "example_key.1.sub_key"
      },
      "value9": {
        "type": "durability",
        "value_format": "FRACTION|RAW_VALUE|PERCENTAGE"
      },
      "value10": {
        "type": "stack_size",
        "fraction_format": true
      },
      "value11": {
        "type": "burn_time",
        "unit": "TICK|SECOND|MINUTE|HOUR"
      },
      "value12": {
        "type": "damage",
        "_comment": "WIP Yeelp mentioned how this wasn't 100% feasible so I'm waiting to note it down here. Same thing for the damage type value"
      },
      "value13": {
        "type": "attack_speed",
        "_comment": "I don't know if we can do it for right click item usage"
      },
      "value14": {
        "type": "harvest_level",
        "value_format": "NAMED|NUMERICAL|STARS"
      },
      "value15": {
        "type": "armor",
        "show_toughness": true,
        "special_protections": false
      }
    }
  ]
}